/* 
⁡⁣⁢⁣​‌‍‌CSS Flexbox​⁡

Note:
When you add a flexbox property to a parent <div> tag, the parent div becomes the flex container while the direct children not descendants of the parent div becomes the flex items. Then when you make any of the direct children div a flex container, its children becomes flexbox items... example:

⁡⁢⁣⁣--> Html <--⁡
<div class="container">
  <div class="item"></div>
  <div class="item"></div>
  <div class="item item-3">
    <div class="sub-item"></div>
    <div class="sub-item"></div>
    <div class="sub-item"></div>
  </div>
</div>

⁡⁢⁣⁣--> Css <--⁡
.container {
  display: flex;  // parent div becomes flexbox container.
  flex-direction: row or column;  // based on your needs
}

--> the .item div are flex items because their direct parent is a flex container. <--
.item {
  margin: 5px;
  background-color: red;
  width: 200px;
  height: 200px;
}
.item-3 { // both a flex container and a flex item.
  display: flex;
  flex-direction: row;
}
.sub-item {  // children becomes flexbox items.
  margin: 5px;
  background-color: blue;
  width: 50px;
  height: 50px;
}



Cheat Sheet for Flexbox...
⁡⁢⁣⁣https://yoksel.github.io/flex-cheatsheet/#section-flex-direction⁡

⁡⁣⁣⁢Flex Container Properties⁡
⁡⁣⁢⁣a) display. ie. flex
b) flex-direction. ie; row or column or row-reverse etc..
c) justify-content. ie: flex-start or flex-end or center.
d) align-items. ie: flex-start or flex-end or center.
e) flex-wrap. ie; wrap
f) align-content⁡

⁡⁣⁢⁣e) flex-wrap:⁡ is placed in the flex container and this wraps the flex items to a new line with respect to flex-shrink property of the flex items ie flex-shrink: 0, then flex-wrap: wrap --> wraps items to a new line.

⁡⁣⁢⁣c) justify-content:⁡ position flex items/children at top left or top right.

⁡⁣⁢⁣d) align-items:⁡ position flex items/children at top left or top right. Same as justify-content.
⁡⁢⁣⁢Note: both are used to center children of a parent tag/element.⁡


⁡⁣⁣⁢
Flex Items Properties⁡
⁡⁣⁢⁣a) align-self.
b) order.
c) flex-grow.
d) flex-shrink.
f) flex-basis.⁡

⁡⁣⁣⁢Explanation of Flex item:⁡
⁡⁣⁢⁣f: flex-basis -->⁡⁡ when flex-direction of a flex container item/tag is set to row, ie: flex-direction: row; --> this means that flex-basis replaces the impact or effect of width because its in a row/horizontal direction. Basically it replaces width.
while:
The reverse is the case if flex-direction: column; this replaces height.

⁡⁣⁢⁣d) flex-shrink: --> shrinks the flex item based on the value ie; 0 (no shrink), 0.5 (little shrink), 1 (more shrink)⁡







​‌‍‌⁡⁢⁣⁣Flexbox Summary:​⁡
1: flex-direction goes with flex-basis.
2: flex-wrap goes with flex-shrink and flex-basis (sizing)





*/